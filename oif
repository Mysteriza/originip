#!/bin/bash

# Validate dependency
for cmd in httpx jq; do
  if ! command -v $cmd &> /dev/null; then
    echo "$cmd is required but not installed. Aborting."
    exit 1
  fi
done

# Parsing
while getopts "d:c:s:h:z:f:" opt; do
  case $opt in
    d) domain=$OPTARG ;;
    c) CENSYS_API_ID_CENSYS_API_SECRET=$OPTARG ;;
    s) SECURITYTRAILS_API=$OPTARG ;;
    h) HUNTER_API=$OPTARG ;;
    z) ZOOMEYE_API=$OPTARG ;;
    f) FOFA_EMAIL_API=$OPTARG ;;
    \?) echo "Invalid option: -$OPTARG" >&2; exit 1 ;;
    :) echo "Option -$OPTARG requires an argument." >&2; exit 1 ;;
  esac
done

if [[ -z $domain ]]; then
  echo "Usage: oif -d domain.com"
  exit 1
fi

echo -e "\033[96mDomain Info:\033[0m"
echo $domain | httpx -duc -silent -sc -cl -title

echo -e "\n\033[96mOrigin IPs Info:\033[0m"
dig=$(dig @1.1.1.1 $domain A +short)

# Censys API
if [[ -n $CENSYS_API_ID_CENSYS_API_SECRET ]]; then
  censys=$(curl -s -g -X 'GET' "https://search.censys.io/api/v2/hosts/search?per_page=25&virtual_hosts=EXCLUDE&q=$domain" \
    -H 'Accept: application/json' --user "$CENSYS_API_ID_CENSYS_API_SECRET")
  censys_ips=$(echo "$censys" | jq -r '.result.hits[] | (.ip + ":" + (.services[] | .port | tostring))' 2>/dev/null | sed 's/:\(80\|443\)$//')
else
  censys_ips=""
fi

# SecurityTrails API
if [[ -n $SECURITYTRAILS_API ]]; then
  securitytrails=$(curl -s --request GET --url "https://api.securitytrails.com/v1/history/$domain/dns/a" \
    --header "apikey: $SECURITYTRAILS_API")
  securitytrails_ips=$(echo "$securitytrails" | jq -r '.records[].values[].ip' 2>/dev/null)
else
  securitytrails_ips=""
fi

# Hunter API
if [[ -n $HUNTER_API ]]; then
  hunterqbase64=$(echo -n "cert.subject=\"$domain\"" | base64)
  end_time=$(date +%Y-%m-%d)
  start_time=$(date -d "$end_time - 31 days" +%Y-%m-%d)
  hunter=$(curl -s -k -X GET "https://api.hunter.how/search?api-key=$HUNTER_API&query=$hunterqbase64&page=1&page_size=10&start_time=$start_time&end_time=$end_time")
  hunter_ips=$(echo "$hunter" | jq -r '.data.list[] | "\(.ip):\(.port)"' 2>/dev/null | sed 's/:\(80\|443\)$//')
else
  hunter_ips=""
fi

# ZoomEye API
if [[ -n $ZOOMEYE_API ]]; then
  zoomeye_query=$(echo -n "$domain" | jq -sRr @uri)
  zoomeye=$(curl -s -X GET "https://api.zoomeye.org/host/search?query=$zoomeye_query" \
    -H "Authorization: JWT $ZOOMEYE_API")
  zoomeye_ips=$(echo "$zoomeye" | jq -r '.matches[].ip' 2>/dev/null)
else
  zoomeye_ips=""
fi

# Fofa API
if [[ -n $FOFA_EMAIL_API ]]; then
  fofa_query=$(echo -n "cert.subject.cn=\"$domain\"" | base64)
  fofa=$(curl -s "https://fofa.info/api/v1/search/all?email=$(echo $FOFA_EMAIL_API | cut -d':' -f1)&key=$(echo $FOFA_EMAIL_API | cut -d':' -f2)&qbase64=$fofa_query&size=100")
  fofa_ips=$(echo "$fofa" | jq -r '.results[] | .[0]' 2>/dev/null | sed 's/:\(80\|443\)$//')
else
  fofa_ips=""
fi

# ViewDNS
viewdns=$(curl -s "https://viewdns.info/iphistory/?domain=$domain" \
  -H 'referer: https://viewdns.info/iphistory/?domain=rix4uni.com' \
  -H 'user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36' \
  | grep -oP '(?<=<td>)(\d{1,3}\.){3}\d{1,3}(?=</td>)')

# Combine and display results
echo $dig $censys_ips $securitytrails_ips $hunter_ips $fofa_ips $zoomeye_ips $viewdns | tr ' ' '\n' | sort -u | httpx -duc -silent -sc -cl -title

echo -e "\n\033[91mNOTE: Check Same Content Length and Same Title that's Your Origin IPs:\033[0m"
